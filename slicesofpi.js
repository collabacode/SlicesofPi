var pi = '314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787661119590921642019893809525720106548586327886593615338182796823030195203530185296899577362259941389124972177528347913151557485724245415069595082953311686172785588907509838175463746493931925506040092770167113900984882401285836160356370766010471018194295559619894676255060400927701671139009848824012858361603563707660104710181942955596198946767837449448255379774726847104047534646208046684259069491293313677028989152104752162056966024058038150193511253382430035587640247496473263914199272604269922796782354781636009341721641219924586315030286182974555706749838505494588586926995690927210797509302955321165344987202755960236480665499119881834797753566369807426542527862551818417574672890977772793800081647060016145249192173217214772350141441973568548161361157352552133475741849468438523323907394143334547762416862518983569485562099219222184272550254256887671790494601653466804988627232791786085784383827967976681454100953883786360950680064225125205117392984896084128488626945604241965285022210661186306744278622039194945047123713786960956364371917287467764657573962413890865832645995813390478027590099465764078951269468398352595709825822620522489407726719478268482601476990902640136394437455305068203496252451749399651431429809190659250937221696461515709858387410597885959772975498930161753928468138268683868942774155991855925245953959431049972524680845987273644695848653836736222626099124608051243884390451244136549762780797715691435997700129616089441694868555848406353422072225828488648158456028506016842739452267467678895252138522549954666727823986456596116354886230577456498035593634568174324112515076069479451096596094025228879710893145669136867228748940560101503308617928680920874760917824938589009714909675985261365549781893129784821682998948722658804857564014270477555132379641451523746234364542858444795265867821051141354735739523113427166102135969536231442952484937187110145765403590279934403742007310578539062198387447808478489683321445713868751943506430218453191048481005370614680674919278191197939952061419663428754440643745123718192179998391015919561814675142691239748940907186494231961567945208095146550225231603881930142093762137855956638937787083039069792077346722182562599661501421503068038447734549202605414665925201497442850732518666002132434088190710486331734649651453905796268561005508106658796998163574736384052571459102897064140110971206280439039759515677157700420337869936007230558763176359421873125147120532928191826186125867321579198414848829164470609575270695722091756711672291098169091528017350671274858322287183520935396572512108357915136988209144421006751033467110314126711136990865851639831501970165151168517143765761835155650884909989859982387345528331635507647918535893226185489632132933089857064204675259070915481416549859461637180270981994309924488957571282890592323326097299712084433573265489382391193259746366730583604142813883032038249037589852437441702913276561809377344403070746921120191302033038019762110110044929321516084244485963766983895228684783123552658213144957685726243344189303968642624341077322697802807318915441101044682325271620105265227211166039666557309254711055785376346682065310989652691862056476931257058635662018558100729360659876486117910453348850346113657686753249441668039626579787718556084552965412665408530614344431858676975145661406800700237877659134401712749470420562230538994561314071127000407854733269939081454664645880797270826683063432858785698305235808933065757406795457163775254202114955761581400250126228594130216471550979259230990796547376125517656751357517829666454779174501129961489030463994713296210734043751895735961458901938971311179042978285647503203198691514028708085990480109412147221317947647772622414254854540332157185306142288137585043063321751829798662237172159160771669254748738986654949450114654062843366393790039769265672146385306736096571209180763832716641627488880';
var piIndex = 0; // Current Pi string index
var clockForward = 4; // Starting position
var clockBackward = 2; // Starting position

var matrix = [
	2,2,4,		//4,5,6 	+
	4,2,6,		//7,8,9		+
	
	16,4,12,	//10,11,12	-
	12,4,8,		//1,2,3		-
	10,4,6,		//4,5,6		-
	
	6,12,18,	//7,8,9		++
	18,24,30,	//10,11,12	++
	36,42,48,	//1,2,3		++
	
	48,56,64,	//4,5,6		+++
	64,72,80,	//7,8,9		+++
	
	4,4,8,		//10,11,12
	4,4,16,		//1,2,3
	
	6,6,12,		//4,5,6
	6,4,24,		//7,8,9
	
	8,4,32,		//10,11,12
	8,6,48,		// 1,2,3
	
	3,3,6,		// 4,5,6
	3,3,9,		// 7,8,9
	
	7,5,35,		//10,11,12
	7,7,49,		// 1,2,3
	
	11,3,33,	// 4,5,6
	11,5,55,	// 7,8,9
	11,7,77		// 10,11,12
];

var process = function(grouping,operation) {

	var result = parseInt(grouping.slice(0,1)); // get first number
	var equation = '' + result;
	
	var x = 1;
	var y = grouping.length;
	
	while (x < y) {
		var next = grouping.slice(x,x+1); // get next number
		if (operation) {
			// Addition
			equation = equation + ' + ' + next;
			result = result + parseInt(next);
		}
		else {
			// Subtraction
			equation = equation + ' - ' + next;
			result = result - parseInt(next);
		}
		operation = !operation; // Swap operation
		x = x + 1;
	}
	equation = equation + ' = ' + result;
	return equation;
};

var i;
for (i in matrix) {
	var groupingCount = matrix[i]; // Next grouping from the Matrix
	var grouping = pi.slice(piIndex,piIndex+groupingCount); // Grouping as a string
	
	console.log(''+clockForward + ' / ' + clockBackward);
	
	var clockForwardResult = process(grouping,true); // Start with addition (A + B - C + D - E)
	console.log(clockForwardResult);
	
	var clockBackwardResult = process(grouping,false); // Start with subtraction (A - B + C - D + E)
	console.log(clockBackwardResult);
	
	console.log('-------------');
	
	piIndex = piIndex + groupingCount; // Move starting index
	
	clockForward = clockForward + 1; // Move clock forward by 1
	clockBackward = clockBackward - 1; // Move clock backward by 1
}